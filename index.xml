<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyberstoph&#39;s blog</title>
    <link>https://cyberstoph.org/</link>
    <description>Recent content on Cyberstoph&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 24 Sep 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cyberstoph.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>After the storm - how to move on with NTLM</title>
      <link>https://cyberstoph.org/posts/2021/09/after-the-storm-how-to-move-on-with-ntlm/</link>
      <pubDate>Fri, 24 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2021/09/after-the-storm-how-to-move-on-with-ntlm/</guid>
      <description>I remember that, about 15 years ago, we already flagged the absence of SMB signing as a vulnerability in reports. Though at that time, we circled more around the theoretical risk of someone tampering SMB traffic due to the lack of integrity protection. None of us really had an idea how to make use of that vulnerability. The later obviously changed.
July 2021 came and brought with it a storm of various Print Spooler RCEs (PrintNightmare), one of the simplest LPE&amp;rsquo;s Windows has seen (HiveNightmare,seriousSAM) and a little hippo (PetitPotam) who anchored the &amp;ldquo;NTLM problem&amp;rdquo; in the center of our attention.</description>
    </item>
    
    <item>
      <title>Abusing Kerberos S4U2self for local privilege escalation</title>
      <link>https://cyberstoph.org/posts/2021/06/abusing-kerberos-s4u2self-for-local-privilege-escalation/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2021/06/abusing-kerberos-s4u2self-for-local-privilege-escalation/</guid>
      <description>TL;DR;
S4U2self can be abused for local privilege escalation (think: Network Service to Local Admin). This is not something new, it&amp;rsquo;s just the first time I actually ran through the steps myself so why not write a post about it. The attack is covered briefly in the Rubeus manual and in more detail in this post by Charlie Clark, which I recommend you read. I won&amp;rsquo;t explain S4U in this post so if you are not familiar with the topic, read this post on constrained delegation first.</description>
    </item>
    
    <item>
      <title>Fun with processes - Suspend and Resume</title>
      <link>https://cyberstoph.org/posts/2021/05/fun-with-processes-suspend-and-resume/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2021/05/fun-with-processes-suspend-and-resume/</guid>
      <description>Did you ever wonder how process suspension in Windows works? Nevermind, I&amp;rsquo;m writing this anyway.
Since you&amp;rsquo;re reading this blog you&amp;rsquo;re either totatlly lost or into Windows anyway. So I assume you alread tried suspending and resuming a process with process explorer for example. There are actually different ways to suspend a process and we&amp;rsquo;ll go with the one that&amp;rsquo;s officially undocumented (more fun).
NTSuspendProcess The API we&amp;rsquo;re using is called NTSuspendProcess and lives inside NTDLL.</description>
    </item>
    
    <item>
      <title>ConvertTo-Powershell - wrapping applications with PS</title>
      <link>https://cyberstoph.org/posts/2020/09/convertto-powershell-wrapping-applications-with-ps/</link>
      <pubDate>Sun, 06 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2020/09/convertto-powershell-wrapping-applications-with-ps/</guid>
      <description>TL;DR; The newest addition to PSArmoury is a small utility script called ConvertTo-Powershell. It allows to &amp;ldquo;convert&amp;rdquo; a C# console application into a powershell script or in other words it creates a .ps1 file from a .exe file. This can be useful for bypassing AWL or AV software and if you are a similar PS-lunatic like myself, it&amp;rsquo;s also just fun :-)
From exe to ps1 If you read one of my previous posts, you might already know that I prefer to do stuff in Powershell.</description>
    </item>
    
    <item>
      <title>PSArmoury 1.4 - now with even more armour</title>
      <link>https://cyberstoph.org/posts/2020/02/psarmoury-1.4-now-with-even-more-armour/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2020/02/psarmoury-1.4-now-with-even-more-armour/</guid>
      <description>TL;DR; I recently added some improvements to PSArmoury, which I like to share with you in this post
 Support for BlockDLL process mitigation to protect your armoury New config parameter that lets you choose the branch in github Simple way to create an armoury from a local file Automatic inventory function  Still reading? Great, let&amp;rsquo;s go.
Introducing BlockDLL process mitigation Thanks to the great C# port of @_RastaMouse it was very easy to implement a process mitigation, that was actually meant to protect processes from malicious injections.</description>
    </item>
    
    <item>
      <title>An introduction to Golden Certificates</title>
      <link>https://cyberstoph.org/posts/2019/12/an-introduction-to-golden-certificates/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2019/12/an-introduction-to-golden-certificates/</guid>
      <description>TL;DR I wrote in one of my previous posts about how control over a certificate template of any kind can be abused to get a Smartcard certificate for a domain admin. In this post, I want to write a little bit more about the persistence capabilities this approach has to offer, as well as how you can detect it. I call this approach a &amp;ldquo;golden certificate&amp;rdquo; as a tribute to Benjamin Delpys famous &amp;ldquo;golden ticket&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Evading anti-virus with Powershell Armoury</title>
      <link>https://cyberstoph.org/posts/2019/12/evading-anti-virus-with-powershell-armoury/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2019/12/evading-anti-virus-with-powershell-armoury/</guid>
      <description>TL;DR; PSArmoury is a PowerShell script that allows you to easily get the newest versions of all your favourite offensive PowerShell craft and automatically put it together in a single, encrypted .ps1-file. Think of it like a &amp;ldquo;yum update&amp;rdquo; that pipes the result in an encrypted container to take it with you. AMSI and EDR bypass included :-)
PSArmoury I wrote my &amp;ldquo;Powershell Armoury&amp;rdquo; script a while ago to tackle two issues I often encountered during engagements:</description>
    </item>
    
    <item>
      <title>Introducing PoshADCS</title>
      <link>https://cyberstoph.org/posts/2019/11/introducing-poshadcs/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2019/11/introducing-poshadcs/</guid>
      <description>TL;DR;TL;DR; The script from this article leverages certificate templates to craft arbitrary smartcard logon certificates so you can impersonate any user. Use this to gain long-term stealthy persistence inside an Active Directory Domain or escalate your privileges to any user. Requirements: control over a user with write access on any kind of certificate template. The heavy lifting in the script is done with PowerView by Will Schroeder, so the kudos go to him.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://cyberstoph.org/posts/2019/10/hello-world/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/posts/2019/10/hello-world/</guid>
      <description>Hello World! Yet another blog unravels in the depths of the internet. Let&amp;rsquo;s see if anyone will find it at all :-)
If you however do so, you&amp;rsquo;ll probably read a lot about Windows security, Powershell, AD, privesc and general infosec stuff.
Hope you like it stranger!</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cyberstoph.org/about/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cyberstoph.org/about/</guid>
      <description>My name is Christoph, I am one of the many security guys with a blog hiding in the depths of the internet. I work as a security analyst and my main focus is Windows security and anything that&amp;rsquo;s related to that lovely beast from redmond. so you will probably read a lot about AD, Powershell and things alike. Let me know what you think :-)
You can reach me on Twitter or via EMail</description>
    </item>
    
  </channel>
</rss>